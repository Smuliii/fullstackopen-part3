{"version":3,"sources":["services/persons.js","components/Filter.js","components/Person.js","components/Persons.js","components/PersonForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","post","id","put","delete","Filter","search","handleChange","value","onChange","Person","person","handleRemove","name","number","data-person","onClick","Persons","persons","map","key","PersonForm","handleNameChange","handleNumberChange","handleSubmit","onSubmit","type","Notification","notification","message","color","error","styles","border","padding","margin","maxWidth","style","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setSearch","setNotification","useEffect","fetchPersons","PersonService","flashNotification","setTimeout","shownPersons","filter","RegExp","test","e","target","preventDefault","personData","existingPerson","find","window","confirm","concat","Number","dataset","updatePersonsList","catch","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.012d6c5a.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst get = () => axios.get(baseUrl).then(response => response.data)\r\nconst add = data => axios.post(baseUrl, data).then(response => response.data)\r\nconst update = (id, data) => axios.put(`${baseUrl}/${id}`, data).then(response => response.data)\r\nconst remove = id => axios.delete(`${baseUrl}/${id}`).then(response => response.data)\r\n\r\nexport default {\r\n\tget,\r\n\tadd,\r\n\tupdate,\r\n\tremove,\r\n}","import React from 'react'\r\n\r\nconst Filter = ({ search, handleChange }) => (\r\n\t<div>\r\n\t\tFilter persons: <input value={search} onChange={handleChange} />\r\n\t</div>\r\n)\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst Person = ({ person, handleRemove }) => (\r\n\t<li>{person.name} {person.number} <button data-person={person.id} onClick={handleRemove}>Delete</button></li>\r\n)\r\n\r\nexport default Person\r\n","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({ persons, handleRemove }) => (\r\n\t<ul>\r\n\t\t{persons.map(person => <Person key={person.name} person={person} handleRemove={handleRemove} />)}\r\n\t</ul>\r\n)\r\n\r\nexport default Persons\r\n","import React from 'react'\r\n\r\nconst PersonForm = ({ name, number, handleNameChange, handleNumberChange, handleSubmit }) => (\r\n\t<form onSubmit={handleSubmit}>\r\n\t\t<div>\r\n\t\t\tName: <input value={name} onChange={handleNameChange} />\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\tNumber: <input value={number} onChange={handleNumberChange} />\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<button type=\"submit\">Add</button>\r\n\t\t</div>\r\n\t</form>\r\n)\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n\tif (!notification?.message) {\r\n\t\treturn null\r\n\t}\r\n\r\n\tconst color = notification.error ? 'red' : 'green'\r\n\tconst styles = {\r\n\t\tborder: `3px ${color} solid`,\r\n\t\tpadding: 10,\r\n\t\tmargin: '0 0 20px',\r\n\t\tmaxWidth: 500,\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div style={styles}>{notification.message}</div>\r\n\t)\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useEffect } from 'react'\nimport PersonService from './services/persons'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [search, setSearch] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    fetchPersons()\n  }, [])\n\n  const fetchPersons = () => {\n    PersonService.get().then(data => setPersons(data))\n  }\n\n  const addPerson = e => {\n    e.preventDefault()\n\n    const personData = { name: newName, number: newNumber }\n    const existingPerson = persons.find(person => person.name === newName)\n\n    if (existingPerson) {\n      if (window.confirm(`Replace old number with a new one for ${existingPerson.name}?`)) {\n        PersonService.update(existingPerson.id, personData).then(data => {\n          setPersons(persons.map(person => person.id === data.id ? data : person))\n          setNewName('')\n          setNewNumber('')\n          flashNotification(`Number was updated: ${existingPerson.number} -> ${data.number}`)\n        })\n      }\n      return\n    }\n\n    PersonService.add(personData).then(data => {\n      setPersons(persons.concat(data))\n      setNewName('')\n      setNewNumber('')\n      // Refresh search\n      setSearch(search)\n      flashNotification(`New person added: ${data.name}`)\n    })\n  }\n\n  const flashNotification = (message, error = false) => {\n    setNotification({ message, error })\n    setTimeout(() => setNotification(null), 3000)\n  }\n\n  const handleNameChange = e => {\n    setNewName(e.target.value)\n  }\n\n  const handleNumberChange = e => {\n    setNewNumber(e.target.value)\n  }\n\n  const handleSearchChange = e => {\n    setSearch(e.target.value)\n  }\n\n  const handleRemove = e => {\n    const id = Number(e.target.dataset.person)\n    const person = persons.find(person => person.id === id)\n    const updatePersonsList = () => setPersons(persons.filter(person => person.id !== id))\n\n    if (!person) {\n      updatePersonsList()\n      return\n    }\n\n    if (window.confirm(`Remove person ${person.name}?`)) {\n      PersonService.remove(id).then(() => {\n        flashNotification(`Person removed: ${person.name}`)\n      }).catch(() => {\n        flashNotification(`Person has already been remove from the server: ${person.name}`, true)\n      }).finally(() => updatePersonsList())\n    }\n  }\n\n  const shownPersons = search\n    ? persons.filter(person => new RegExp(search, 'i').test(person.name))\n    : persons\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter search={search} handleChange={handleSearchChange} />\n\t\t\t<h2>Add new person</h2>\n      <PersonForm name={newName} number={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} handleSubmit={addPerson} />\n      <h2>Numbers</h2>\n      <Persons persons={shownPersons} handleRemove={handleRemove} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}